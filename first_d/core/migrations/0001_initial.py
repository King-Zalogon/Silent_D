# Generated by Django 4.2.5 on 2023-10-25 18:57

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Creator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=15, verbose_name='Name')),
                ('active', models.BooleanField(default=True, verbose_name='Active')),
                ('is_player', models.BooleanField(default=True, verbose_name='Is a Player')),
                ('is_gm', models.BooleanField(default=True, verbose_name='Is a Storyteller')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RulesSystem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('system_name', models.CharField(default='TBD', max_length=10, null=True, verbose_name='System')),
            ],
        ),
        migrations.CreateModel(
            name='GameMaster',
            fields=[
                ('creator_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.creator')),
                ('availability', models.CharField(default='TBD', null=True, verbose_name='Availability')),
            ],
            options={
                'abstract': False,
            },
            bases=('core.creator',),
        ),
        migrations.CreateModel(
            name='Chronicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=30, verbose_name="Chronicle's title")),
                ('description', models.CharField(null=True, verbose_name='Synopsys')),
                ('start', models.DateField(null=True, verbose_name='Date of first session')),
                ('ended', models.BooleanField(default=False, verbose_name='Finished?')),
                ('rules_system', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.rulessystem')),
                ('gm', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='core.gamemaster', verbose_name='Storyteller')),
            ],
        ),
        migrations.CreateModel(
            name='Character',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=15, verbose_name='Name')),
                ('concept', models.CharField(default='TBD', max_length=30, verbose_name='Concept')),
                ('growth', models.IntegerField(default=0, verbose_name='Current level or Exp')),
                ('age', models.IntegerField(default=0, verbose_name='Age')),
                ('is_player', models.BooleanField(default=True, verbose_name="Is a player's character?")),
                ('alive', models.BooleanField(default=True, verbose_name='Is alive?')),
                ('bio', models.CharField(max_length=300, null=True, verbose_name='Biography')),
                ('portrait', models.URLField(null=True, verbose_name="Portraits' URL")),
                ('chronicle', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.chronicle')),
                ('creator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.creator')),
                ('rules_system', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.rulessystem')),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('core.creator',),
        ),
    ]
